# -*- coding: utf-8 -*-
# Generated by Django 1.10.3 on 2017-01-11 20:49
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import materials.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, verbose_name='Name')),
                ('email', models.EmailField(max_length=50, verbose_name='E-mail')),
            ],
            options={
                'verbose_name': 'Author',
                'verbose_name_plural': 'Authors',
            },
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25, verbose_name='Name')),
                ('slug', models.SlugField(verbose_name='Slug')),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Category',
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Material',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('engine', models.CharField(choices=[('int', 'Blender Internal'), ('cyc', 'Cycles'), ('lux', 'Lux Render'), ('yfr', 'YafaRay'), ('oct', 'Octane'), ('nox', 'NOX Render')], max_length=3, verbose_name='Render engine')),
                ('name', models.CharField(max_length=20, verbose_name='Name')),
                ('slug', models.SlugField(verbose_name='Slug')),
                ('description', models.TextField(blank=True, verbose_name='Description')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date')),
                ('draft', models.BooleanField(default=True, verbose_name='Draft')),
                ('storage', models.FileField(blank=True, upload_to=materials.models.get_storage_filename, verbose_name='Storage')),
                ('storage_name', models.CharField(max_length=50, verbose_name='Storage name')),
                ('image', models.ImageField(blank=True, upload_to=materials.models.get_image_filename, verbose_name='Original image')),
                ('thumb_big', models.ImageField(blank=True, upload_to=materials.models.get_image_filename, verbose_name='Preview (Big)')),
                ('thumb_medium', models.ImageField(blank=True, upload_to=materials.models.get_image_filename, verbose_name='Preview (Medium)')),
                ('thumb_small', models.ImageField(blank=True, upload_to=materials.models.get_image_filename, verbose_name='Preview (Small)')),
                ('downloads', models.IntegerField(default=0, verbose_name='Number of downloads')),
                ('rating', models.FloatField(default=0, verbose_name='Rating')),
                ('votes_count', models.IntegerField(default=0, verbose_name='Number of votes')),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='materials.Author')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='materials', to='materials.Category')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='materials', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
                'verbose_name': 'Material',
                'verbose_name_plural': 'Materials',
            },
        ),
        migrations.CreateModel(
            name='Statistic',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField(default=django.utils.timezone.now, verbose_name='Date')),
                ('count', models.IntegerField(default=1, verbose_name='Count')),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statistics', to='materials.Material')),
            ],
            options={
                'ordering': ['-date', '-count'],
                'verbose_name': 'Statistic',
                'verbose_name_plural': 'Statistics',
            },
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.PositiveIntegerField(verbose_name='Score')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('modified_at', models.DateTimeField(auto_now=True)),
                ('material', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='materials.Material')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-modified_at'],
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
            },
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together=set([('material', 'user')]),
        ),
    ]
